new-ui mi /dev/pts/3
run ft_strcmp
next
cokill
kill
run
continu
n
run
c
exit
quit
new-ui mi /dev/pts/3
run
kill
run ft_strcmp
run ft_strcmp
continue
i r
i r all
i r
print $SF
print $[S]F
print $[SF]
print $[sf]
print $eeree
print $sf
print [sf]
print sf
print $sf
eflags 
i r eflags
i r eflags 0x41 [ CF ZF ]
i r eflags
info registers eflags 
p $eflags
p/t $eflags
c

p/t $eflags
p $eflags
source .gdbinit
i r
kill
d
b end_loop
run
c
c
kill
run ft_strcmp
n
c
n
p $rax
n
p $rax
kill
qiut
quit
new-ui mi /dev/pts/3
run
kill
run ft_strcmp
c
n
i r
p [rdi]
p $[rdi]
p $rdi
i r
n
i r
i r rax
i r rdi
i r rsi
kill
kill
run ft_strcmp
c
d
kill
b end_loop
run ft_strcmp
c
i r
n
i r
kill
run
c
i r
n
i r
n
i r
n
i r
kill
d
b ft_strcmp
run
i r
n
i r
set $eflags
set $eflags |= (1 << $SF)
set $eflags = 0x0000F000
i r
i r
set $eflags = 0xFFFFFFFF
i r
n
n
n
n
exit
exit
quit
new-ui mi /dev/pts/3
source .gdbinit
run
kill
run ft_strcpy
ir
i r
n
p eflags
kill y
kill
kill
source .gdbinit
run
kill
source .gdbinit
run ft_strcmp
kill
shell clear
run ft_strcpy
k
run
n
c
n
n
q
new-ui mi /dev/pts/3
d
b main.c:80
run
n
p str_2[i]
n
p str_2[i]
c
p str_2[i]
c

b main.c:80
d
main.c:82
main.c:83
b main.c:82
run
p str_2[i]
n
p str_2[i]
c
p str_2[i]
n
p str_2[i]
n
c
d
b main.c:119
c
p str_2[i]
s
p str_2[i]
s
p str_2[i]
define hook_stop p str_2[i] end
define hook-stop p str_2[i] end
define hook-stop p str_2[i] end
source ~/.gdbinit
s
d
run ft_strcpy
quit
new-ui mi /dev/pts/8
run ft_strcpy
kill
d
b main.c:119
run ft_strcpy
p str_2[i]
n
kill
b main.c:91
run
c
c
c
run
c
kill
b
d
b main.c:83
b main.c:119
b
run
c
kill
d
b list
help
breapoints help
help breakpoints
watch str_2[i]
d
b main.c:83
b main.c:120
run
n
c
n
n
c
d
b main.c:83
b main.c:119
run
n
c
run
kill
d
b main.c:84
b main.c:119
run
c
s
run
c
s
p i
p str_2[i]
p /d str_2[i]
p /d *str_2[i]
p /c *str_2[i]
p /h str_2[i]
p  str_2[i]
x /h str_2[i]
s
q
